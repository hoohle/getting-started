
type MonitorNode {
    id:             ID!             @id
    monitorSN:      String!         @unique
    monitorName:    String!
    monitorType:    String!
    monitorStatus:  String!
    location:       LocationInfo    @relation(link:INLINE)
    realTimeData:   RealTimeData    @relation(onDelete: CASCADE)
    historyDatas:   [HistoryData!]! @relation(onDelete: CASCADE)
    createdAt:      DateTime!       @createdAt
    updatedAt:      DateTime!       @updatedAt
} 


type LocationInfo {
    id:             ID!             @id
    describe:       String!
    longitude:      Float!
    latitude:       Float!
    province:       String
    city:           String
    county:         String
    street:         String
    indoorLocal:    String
    outdoorLocal:   String
    monitorNodes:   [MonitorNode!]! @relation(onDelete: CASCADE)
    idVerifyDevices:[IDVerifyDeviceInfo!]     @relation(onDelete: CASCADE)
    wifiProbers:    [WiFiProberinfo!] @relation(onDelete: CASCADE)
}

type RealTimeData {
    id:             ID!             @id
    monitorNode:    MonitorNode!    @unique @relation(link:INLINE)
    rcvTime:        DateTime        
    windSpeed:      Float
    windDirection:  String
    temperature:    Float
    humidity:       Float
    noise:          Float
    pm2:            Float
    pm10:           Float
    co:             Float
    co2:            Float
    airPressure:    Float
    sunLight:       Float
    updatedAt:      DateTime!       @updatedAt
}

type HistoryData {
    id:             ID!             @id
    monitorNode:    MonitorNode!    @relation(link: INLINE)
    rcvTime:        DateTime!
    windSpeed:      Float
    windDirection:  String
    temperature:    Float
    humidity:       Float
    noise:          Float
    pm2:            Float
    pm10:           Float
    co:             Float
    co2:            Float
    airPressure:    Float
    sunLight:       Float
    createdAt:      DateTime!       @createdAt
}

type DataUnit {
    id:             ID!             @id
    dataItem:       String!
    unit:           String!
}
type CityCodeInfo {
    id:             ID!             @id
    airCitycode:    String!         @unique
    weatherCityCode: String!        @unique
    cityName:       String!
    locationInfo:   LocationInfo
    airLive:        AirLive
    weatherLive:    WeatherLive
    weatherAirLive: WeatherAirLive
    weatherAirHistory:  [WeatherAirHistory!] @relation(onDelete: CASCADE)
    airHistoryDatas: [AirHistoryData!]  @relation(onDelete: CASCADE)
    weatherHistoryDatas: [WeatherHistoryData!] @relation(onDelete: CASCADE)
}
type AirHistoryData {
    id:             ID!             @id
    citycode:       String!         
    PM25:           String
    time:           String
    rdesc:          String
    PM10:           String
    SO2:            String
    o3:             String
    NO2:            String
    primary:        String
    rcode:          String
    CO:             String
    AQI:            String
    cityInfo:       CityCodeInfo    @relation(link:INLINE)
    
}
type AirLive {
    id:             ID!             @id
    citycode:       String!         @unique
    PM25:           String
    time:           String
    rdesc:          String
    PM10:           String
    SO2:            String
    o3:             String
    NO2:            String
    primary:        String
    rcode:          String
    CO:             String
    AQI:            String
    cityInfo:       CityCodeInfo    @relation(link:INLINE)
}
type WeatherLive {
    id:             ID!             @id
    citycode:       String!         @unique
    updatedAt:      DateTime!       @updatedAt
    cityInfo:       CityCodeInfo    @relation(link:INLINE)
    windspeed:      String
    airpressure:    String
    phenomena:      String
    rdesc:          String
    humidity:       String
    updatetime:     String
    windpower:      String
    feelst:         String
    winddirect:     String
    rcode:          Int
    rain:           String
    temperature:    String
}
type WeatherHistoryData {
    id:             ID!             @id
    citycode:       String!         
    updatedAt:      DateTime!       @updatedAt
    cityInfo:       CityCodeInfo    @relation(link:INLINE)
    windspeed:      String
    airpressure:    String
    phenomena:      String
    rdesc:          String
    humidity:       String
    updatetime:     String
    windpower:      String
    feelst:         String
    winddirect:     String
    rcode:          String
    rain:           String
    temperature:    String
}

type IDVerifyDeviceInfo {
    id:             ID!             @id
    devNo:          String          @unique
    devName:        String
    devAddr:        String
    locationInfo:   LocationInfo    @relation(link: INLINE)
    idCardVerifyDatas: [IDCardVerifyData!] @relation(onDelete: CASCADE, name: "VerifyDevices")
}
type PersonInfo {
    id:             ID!             @id
    idCard:         String!         @unique
    cardType:       String! 
    validity:       String
    birthday:       String
    personName:     String
    address:        String
    nation:         String
    authority:      String
    gender:         String
    class:          String
    studentNumber:  String
    phone:          String
    remark:         String
    baseFaceImgUri: String
    idCardVerifyDatas: [IDCardVerifyData!] @relation(onDelete: CASCADE, name: "Person")
    macinfos:        [MACinfo!]         @relation(onDelete: CASCADE)
}

type IDCardVerifyData {
    id:             ID!             @id
    createdAt:      DateTime        @createdAt
    devNo:          String          
    devName:        String
    devAddr:        String
    idCard:         String
    personType:     String
    score:          String
    status:         String
    faceImgUri:     String
    person:         PersonInfo      @relation(link: INLINE, name: "Person")
    idVerifyDevice: IDVerifyDeviceInfo @relation(link: INLINE, name: "VerifyDevices")
}

type MACinfo {
    id:             ID!             @id
    mac:            String!         @unique       
    devType:        String
    probeCount:     Int
    lastProbeTime:  DateTime!       @updatedAt
    person:         PersonInfo      @relation(link: INLINE)
    ifOnline:       Int          
    macProbeDatas:   [MACProbeData!] @relation(onDelete: CASCADE)
    attendanceRecords: [AttendanceRecord!] @relation(onDelete: CASCADE)
}

type WiFiProberinfo {
    id:             ID!             @id
    devNo:          String!         @unique
    devMac:         String
    devMdoel:       String
    locationInfo:   LocationInfo    @relation(link: INLINE)
    macProbeDatas:  [MACProbeData!] @relation(onDelete: CASCADE)
}

type MACProbeData {
    id:             ID!             @id
    probeTime:      String!            
    mac:            MACinfo         @relation(link: INLINE)          
    isConnet:       String
    routerMAC:      String
    routerSSID:     String
    destance:       String
    wifiProber:     WiFiProberinfo   @relation(link: INLINE)

}

type AttendanceRecord {
    id:             ID!             @id
    attDate:        DateTime
    mac:            MACinfo         @relation(link: INLINE)
    totalSecond:    String          
    
}

type MACProbeRecord {
    id:             ID!             @id
    mac:            String!         
    devNo:          String!
    entryTime:      DateTime
    departureTime:  DateTime
}

type WeatherAirLive {
    id:             ID!             @id
    WindSpeed:      String
    CityName:       String          @unique
    Airpressure:    String
    Phenomena:      String
    Rdesc:          String
    Humidity:       String
    Updatetime:     String
    Windpower:      String
    Feelst:         String
    Winddirect:     String
    Rcode:          Int
    Rain:           String
    Temperature:    String
    Citycode:       String
    PM25:           String
    PM10:           String
    SO2:            String
    O3:             String
    NO2:            String
    Primary:        String
    CO:             String
    AQI:            String
    cityInfo:       CityCodeInfo    @relation(link:INLINE)
}
type WeatherAirHistory {
    id:             ID!             @id
    WindSpeed:      String
    CityName:       String          @unique
    Airpressure:    String
    Phenomena:      String
    Rdesc:          String
    Humidity:       String
    Updatetime:     String
    Windpower:      String
    Feelst:         String
    Winddirect:     String
    Rcode:          Int
    Rain:           String
    Temperature:    String
    Citycode:       String
    PM25:           String
    PM10:           String
    SO2:            String
    O3:             String
    NO2:            String
    Primary:        String
    CO:             String
    AQI:            String
    cityInfo:       CityCodeInfo    @relation(link:INLINE)
}